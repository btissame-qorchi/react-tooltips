{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["TooltipColor","style","color","Child","forwardRef","props","ref","App","className","marginBottom","arrow","delay","placement","content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAKMA,G,MAAe,WACnB,OAAO,mBAAGC,MAAO,CAACC,MAAM,QAAjB,iCAGHC,EAAQC,sBAAW,SAACC,EAAMC,GAC9B,OACE,sBAAKA,IAAKA,EAAV,UACE,8CACA,qDAkCSC,MA3Bf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKP,MAAO,CAACQ,aAAa,QAA1B,SACE,cAAC,IAAD,CAAOC,OAAO,EAAOC,MAAO,IAAMC,UAAU,OAAOC,QAAQ,iBAA3D,SACE,kDAGJ,qBAAKZ,MAAO,CAACQ,aAAa,QAA1B,SACE,cAAC,IAAD,CAAOI,QAAS,mBAAGZ,MAAO,CAACC,MAAM,OAAjB,0BAAhB,SACE,kDAGJ,qBAAKD,MAAO,CAACQ,aAAa,QAA1B,SACE,cAAC,IAAD,CAAOI,QAAS,cAAC,EAAD,IAAhB,SACE,kDAGJ,qBAAKZ,MAAO,CAACQ,aAAa,QAA1B,SACE,cAAC,IAAD,CAAOI,QAAS,cAAC,EAAD,IAAhB,SACE,cAACV,EAAD,YC5BKW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ac2681e5.chunk.js","sourcesContent":["import React, {forwardRef  } from \"react\";\nimport './App.css';\nimport Tippy from '@tippy.js/react';\nimport 'tippy.js/dist/tippy.css';\n\nconst TooltipColor = () => {\n  return <p style={{color:\"pink\"}}>Tooltip Component</p>\n}\n\nconst Child = forwardRef((props,ref) => {\n  return(\n    <div ref={ref}>\n      <div>First child</div>\n      <div>Second child</div>\n    </div>\n  )\n})\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div style={{marginBottom:'30px'}}>\n        <Tippy arrow={false} delay={1000} placement='left' content=\"Simple Tooltip\">\n          <button>Hover me</button>\n        </Tippy>\n      </div>\n      <div style={{marginBottom:'30px'}}>\n        <Tippy content={<p style={{color:'red'}}>HTML Tooltip</p>}>\n          <button>Hover me</button>\n        </Tippy>\n      </div>\n      <div style={{marginBottom:'30px'}}>\n        <Tippy content={<TooltipColor></TooltipColor>}>\n          <button>Hover me</button>\n        </Tippy>\n      </div>\n      <div style={{marginBottom:'30px'}}>\n        <Tippy content={<TooltipColor></TooltipColor>}>\n          <Child></Child>\n        </Tippy>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}